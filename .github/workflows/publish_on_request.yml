name: Publish on request

on:
  issue_comment:
    types: [created, edited]

jobs:
  build:
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/publish'}}
    runs-on: ubuntu-latest
    steps:
      - uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - uses: actions/checkout@v3
        if: success()
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
      
      - uses: actions/checkout@v3
        if: success()
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: 16
      - name: Install npm dependencies
        run: |
          npm ci
      - name: Build
        run: nice bash build.sh

      - name: Upload yourloops build
        if: ${{ github.event.issue.pull_request && github.event.comment.body == '/publish' }}
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  publish:
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/publish'}}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check for Command
        id: command
        uses: xt0rted/slash-command-action@v1
        with:
          command: publish
          reaction: "true"
          reaction-type: "eyes"
          allow-edits: "false"
          permission-level: admin

      - name: Act on the command
        run: echo "The command was '${{ steps.command.outputs.command-name }}' with arguments '${{ steps.command.outputs.command-arguments }}'

      - uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - uses: actions/checkout@v3
        if: success()
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Download artifact
        uses: actions/download-artifact@v3

      - name: Get yourloops version from package.json
        id: package-version
        run: |
          echo "semver=$(cat ./package.json | jq '.version' | tr -d '"')" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Nexus registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}

      - name: Build and push blip Docker image
        uses: docker/build-push-action@v3
        env:
          PR_NUMBER: ${{github.event.issue.number}}
        with:
          context: .
          push: true
          platforms: linux/arm64,linux/amd64
          tags:  ${{ secrets.REGISTRY }}/blip:${{ steps.package-version.outputs.semver }}-PR-${{env.PR_NUMBER}}


      - name: Echo tags
        run: echo "The tags is ${{ steps.meta.outputs.tags }}'

      - name: Build and push Lambda Docker image
        uses: docker/build-push-action@v3
        env:
          PR_NUMBER: ${{github.event.issue.number}}
        with:
          context: .
          file: ./Dockerfile.lambda
          push: true
          platforms: linux/arm64,linux/amd64
          tags:  ${{ secrets.REGISTRY }}/blip-lambda:${{ steps.package-version.outputs.semver }}-PR-${{env.PR_NUMBER}}

      - name: Creating new github tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: v${{ steps.package-version.outputs.semver }}
          force_push_tag: true
