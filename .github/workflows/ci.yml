name: Front CI

on:
  push:
    branches: [ 'main', 'release/**', 'pre-release/**' ]
  pull_request:
    branches: [ 'main', 'release/**', 'pre-release/**' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
  node-version: 24

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: ${{ env.node-version }}

      - name: Install npm dependencies
        run: |
          npm run security-checks
          npm ci

      - name: Lint + test locales
        run: |
          npm run lint
          npm run test-locales

  test-lambda:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: ${{ env.node-version }}

      - name: Install npm dependencies
        run: |
          npm ci

      - name: Test lambda
        run: npm run test-lambda

  test-tideline:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: ${{ env.node-version }}

      - name: Install npm dependencies
        run: |
          npm ci
          npm run build-dependencies

      - name: Test tideline
        run: npm run test-tideline

  test-medical:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: ${{ env.node-version }}

      - name: Install npm dependencies
        run: |
          npm ci

      - name: Test medical domain
        run: npm run test-medical-domain

  test-dumb:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: ${{ env.node-version }}

      - name: Install npm dependencies
        run: |
          npm ci
          npm run build-dependencies

      - name: Test dumb
        run: npm run test-dumb

  test-yourloops-unit:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: ${{ env.node-version }}
      - name: Install npm dependencies
        run: |
          npm ci
          npm run build-dependencies

      - name: Test yourloops unit
        run: npm run test-yourloops-unit

  test-yourloops-integration-hcp:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: ${{ env.node-version }}

      - name: Install npm dependencies
        run: |
          npm ci
          npm run build-dependencies

      - name: Test yourloops integration hcp
        run: npm run test-yourloops-integration-hcp

  test-yourloops-integration-caregiver:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: ${{ env.node-version }}

      - name: Install npm dependencies
        run: |
          npm ci
          npm run build-dependencies

      - name: Test yourloops integration caregiver
        run: npm run test-yourloops-integration-caregiver

  test-yourloops-integration-patient:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: ${{ env.node-version }}

      - name: Install npm dependencies
        run: |
          npm ci
          npm run build-dependencies

      - name: Test yourloops integration patient
        run: npm run test-yourloops-integration-patient

  test-yourloops-integration-common:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: ${{ env.node-version }}

      - name: Install npm dependencies
        run: |
          npm ci
          npm run build-dependencies

      - name: Test yourloops integration common
        run: npm run test-yourloops-integration-common

  build:
    runs-on: ubuntu-latest
    needs: [ test-lambda, test-tideline, test-dumb, test-medical, test-yourloops-unit, test-yourloops-integration-hcp, test-yourloops-integration-caregiver, test-yourloops-integration-patient, test-yourloops-integration-common ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: ${{ env.node-version }}

      - name: Install npm dependencies
        run: npm ci

      - name: Build
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: nice bash build.sh

      - name: Upload yourloops build
        if: github.ref_name == 'main' || startsWith(github.ref_name, 'release/')
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    if: github.ref_name == 'main' || startsWith(github.ref_name, 'release/')
    needs: build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.changelog-version.outputs.semver }}
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4

      - name: Get yourloops version from changelog
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}
          registry: ${{ secrets.REGISTRY }}
          options: -v ${{ github.workspace }}:/dblprm/blip:rw --user 0:0
          image: docker.ci.diabeloop.eu/ci-toolbox:latest
          run: |
            cd blip
            echo "semver=$(release-helper get-version)" > version.env

      - name: Read env file
        id: changelog-version
        uses: cardinalby/export-env-action@v1
        with:
          envFile: 'version.env'
          expand: 'false'
          export: 'false'

      - name: Set short commit sha
        id: short-commit-compute
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:v0.10.6

      - name: Log in to the Nexus registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}

      - name: Build and push blip Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ${{ secrets.REGISTRY }}/blip:${{ steps.changelog-version.outputs.semver }}-${{ steps.short-commit-compute.outputs.sha_short }}
            ${{ secrets.REGISTRY }}/blip:${{ steps.changelog-version.outputs.semver }}

      - name: Creating new github tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: v${{ steps.changelog-version.outputs.semver }}
          force_push_tag: true
      - name: Creating new github tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: v${{ steps.changelog-version.outputs.semver }}-${{ steps.short-commit-compute.outputs.sha_short }}
          force_push_tag: true

  documentation:
    if: github.ref_name == 'main' || startsWith(github.ref_name, 'release/')
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}

      - name: Install npm dependencies
        run: npm ci

      - name: Generating documentation
        env:
          soupFileName: blip-${{ needs.publish.outputs.version }}-soup.md
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}
          registry: ${{ secrets.REGISTRY }}
          options: -v ${{ github.workspace }}:/dblprm/blip/:rw --user 0:0
          image: docker.ci.diabeloop.eu/ci-toolbox:latest
          run: |
            echo Generating soup file ${{ env.soupFileName }}
            cd blip
            release-helper gen-dep-report --deep-dep 'blip,dumb,medical-domain,tideline,tidepool-viz' "${{ env.soupFileName }}"

      - name: Upload soup file on artifact
        uses: actions/upload-artifact@v4
        with:
          name: soup-list
          path: blip-${{ needs.publish.outputs.version }}-soup.md

      - name: Upload soup file to S3 bucket
        uses: addnab/docker-run-action@v3
        with:
          options: -v ${{ github.workspace }}:/blip:rw --user 0:0
          image: amazon/aws-cli
          run: |
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_DEFAULT_REGION=eu-west-1
            cd /blip
            aws s3 cp blip-${{ needs.publish.outputs.version }}-soup.md s3://${{ secrets.AWS_BUCKET }}/soup/blip/
