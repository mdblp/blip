name: Front CI

on:
  push:
    branches: [ 'dblp' ]
  pull_request:
    branches: [ 'dblp' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: 16

      - name: Install npm dependencies
        run: |
          npm run security-checks
          npm ci

      - name: Lint + test locales
        run: |
          npm run lint
          npm run test-locales

  test-lambda:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: 16

      - name: Install npm dependencies
        run: |
          npm ci

      - name: Test lambda
        run: npm run test-lambda

  test-sundial:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: 16

      - name: Install npm dependencies
        run: |
          npm ci

      - name: Test sundial
        run: npm run test-sundial


  test-tideline:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: 16

      - name: Install npm dependencies
        run: |
          npm ci

      - name: Test tideline
        run: npm run test-tideline


  test-medical:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: 16

      - name: Install npm dependencies
        run: |
          npm ci

      - name: Test medical domain
        run: npm run test-medical-domain

  test-dumb:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: 16

      - name: Install npm dependencies
        run: |
          npm ci
          npm run build-dependencies

      - name: Test dumb
        run: npm run test-dumb


  test-viz:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: 16

      - name: Install npm dependencies
        run: |
          npm ci

      - name: Test viz
        run: npm run test-viz

  test-blip:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: 16
      - name: Install npm dependencies
        run: |
          npm ci
          npm run build-dependencies

      - name: Test blip
        run: npm run test-blip

  test-yourloops-unit:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: 16
      - name: Install npm dependencies
        run: |
          npm ci
          npm run build-dependencies

      - name: Test yourloops unit
        run: npm run test-yourloops-unit

  test-yourloops-integration:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: 16

      - name: Install npm dependencies
        run: |
          npm ci
          npm run build-dependencies

      - name: Test yourloops integration
        run: npm run test-yourloops-integration

  build:
    runs-on: ubuntu-latest
    needs: [ test-lambda, test-sundial, test-tideline, test-dumb, test-medical, test-yourloops-unit, test-yourloops-integration, test-blip, test-viz ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json
          node-version: 16

      - name: Install npm dependencies
        run: npm ci

      - name: Build
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: nice bash build.sh

      - name: Upload yourloops build
        if: github.ref_name == 'dblp'
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  publish:
    if: github.ref_name == 'dblp'
    needs: build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3

      - name: Get yourloops version from package.json
        id: package-version
        run: |
          echo "semver=$(cat ./package.json | jq '.version' | tr -d '"')" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Nexus registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.REGISTRY }}/blip
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push blip Docker image
        uses: docker/build-push-action@v3
        env:
          PR_NUMBER: ${{github.event.issue.number}}
        with:
          context: .
          push: true
          platforms: linux/arm64,linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # for now disable as we not used the changelog (missing UNRELEASED info)
  #      - name: Creating new github tag
  #        uses: rickstaa/action-create-tag@v1
  #        with:
  #          tag: ${{ steps.meta.outputs.version }}
  #          force_push_tag: true

  documentation:
    if: github.ref_name == 'dblp'
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install npm dependencies
        run: npm ci

      - name: Generating documentation
        env:
          soupFileName: blip-${{ needs.publish.outputs.version }}-soup.md
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}
          registry: ${{ secrets.REGISTRY }}
          options: -v ${{ github.workspace }}:/dblprm/blip/:rw --user 0:0
          image: docker.ci.diabeloop.eu/ci-toolbox:latest
          run: |
            echo Generating soup file ${{ env.soupFileName }}
            cd blip
            release-helper gen-dep-report --deep-dep 'blip,dumb,medical-domain,sundial,tideline,tidepool-viz' "${{ env.soupFileName }}"

      - name: Upload soup file on artifact
        uses: actions/upload-artifact@v3
        with:
          name: soup-list
          path: blip-${{ needs.publish.outputs.version }}-soup.md

      - name: Upload soup file to S3 bucket
        uses: addnab/docker-run-action@v3
        with:
          options: -v ${{ github.workspace }}:/blip:rw --user 0:0
          image: amazon/aws-cli
          run: |
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_DEFAULT_REGION=eu-west-1
            cd /blip
            aws s3 cp blip-${{ needs.publish.outputs.version }}-soup.md s3://${{ secrets.AWS_BUCKET }}/soup/blip/
