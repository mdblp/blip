import PatientAPI from '../../../lib/patient/patient-api'
import { TeamMemberRole } from '../../../models/team'
import { UserInvitationStatus } from '../../../models/generic'

export const mockPatientAPI = (patientId: string) => {
  jest.spyOn(PatientAPI, 'getPatients').mockResolvedValue([{ userId: patientId, teamId: '62fe00defc9374b2fed32bcd', role: TeamMemberRole.patient, profile: { firstName: 'Yourloops UI 28', fullName: 'Yourloops UI 28 Patient 1', lastName: 'Patient 1', patient: { birthday: '1980-01-01T10:44:34+01:00', diagnosisType: 'type1' }, privacyPolicy: { acceptanceTimestamp: '2021-05-22', isAccepted: true }, termsOfUse: { acceptanceTimestamp: '2021-05-22', isAccepted: true } }, settings: null, preferences: { displayLanguageCode: 'en' }, invitationStatus: UserInvitationStatus.accepted, email: 'ylp.ui.test.patient28@diabeloop.fr', idVerified: false, unreadMessages: 0, alarms: { timeSpentAwayFromTargetRate: 0, timeSpentAwayFromTargetActive: false, frequencyOfSevereHypoglycemiaRate: 0, frequencyOfSevereHypoglycemiaActive: false, nonDataTransmissionRate: 0, nonDataTransmissionActive: false }, monitoring: null }, { userId: patientId, teamId: '62fe00defc9374b2fed32bce', role: TeamMemberRole.patient, profile: { firstName: 'Yourloops UI 28', fullName: 'Yourloops UI 28 Patient 1', lastName: 'Patient 1', patient: { birthday: '1980-01-01T10:44:34+01:00', diagnosisType: 'type1' }, privacyPolicy: { acceptanceTimestamp: '2021-05-22', isAccepted: true }, termsOfUse: { acceptanceTimestamp: '2021-05-22', isAccepted: true } }, settings: null, preferences: { displayLanguageCode: 'en' }, invitationStatus: UserInvitationStatus.accepted, email: 'ylp.ui.test.patient28@diabeloop.fr', idVerified: false, unreadMessages: 0, alarms: { timeSpentAwayFromTargetRate: 0, timeSpentAwayFromTargetActive: false, frequencyOfSevereHypoglycemiaRate: 0, frequencyOfSevereHypoglycemiaActive: false, nonDataTransmissionRate: 0, nonDataTransmissionActive: false }, monitoring: null }])
}
